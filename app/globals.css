@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html {
    @apply bg-white font-futura text-text-400;
  }

  body {
    @apply bg-white text-sm text-text-400;
  }
}

:root {
  padding: 0;
  margin: 0;
  scroll-behavior: smooth;
  /* background-color: #27252526; */
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

a {
  color: inherit;
  text-decoration: none;
}

p,
span {
  padding: 0;
  margin: 0;
  line-height: normal !important;
}

/* @media (prefers-color-scheme: dark) {
  html {
    color-scheme: dark;
  }
} */

/* css transtions starts here */

.alert-enter {
  opacity: 0;
  transform: scale(0.9);
}
.alert-enter-active {
  opacity: 1;
  transform: translateX(0);
  transition: opacity 300ms, transform 300ms;
}
.alert-exit {
  opacity: 1;
}
.alert-exit-active {
  opacity: 0;
  transform: scale(0.9);
  transition: opacity 300ms, transform 300ms;
}

.fade-in-enter {
  opacity: 0;
  transform: translateY(30px);
}
.fade-in-enter-active {
  opacity: 1;
  transform: translateY(0);
  transition: opacity 300ms, transform 300ms;
}
.fade-in-exit {
  opacity: 1;
  transform: translateY(0);
}
.fade-in-exit-active {
  opacity: 0;
  transform: translateY(30px);
  transition: opacity 300ms, transform 300ms;
}

.translate-down-enter {
  opacity: 0;
  transform: translateY(70px);
}
.translate-down-enter-active {
  opacity: 1;
  transform: translateY(0);
  transition: opacity 300ms, transform 300ms;
}
.translate-down-exit {
  transform: translateY(0);
  opacity: 1;
}
.translate-down-exit-active {
  transform: translateX(600px);
  transition: opacity 300ms, transform 300ms;
}

.move-in-enter {
  transform: translateX(-100vw);
}
.move-in-enter-active {
  transform: translateX(0);
  transition: transform 400ms ease-in-out;
}
.move-in-exit {
  transform: translateX(0);
}
.move-in-exit-active {
  transform: translateX(-100vw);
  transition: transform 400ms ease-in-out;
}

/* css transtions ends here */

.dark-icon path {
  stroke: black;
}

.white-icon path {
  fill: #ffffff;
}

.dark-icon circle {
  stroke: black;
}

.loader {
  animation: rotate 1.2s linear infinite;
}

/* loader animation */
@keyframes rotate {
  to {
    transform: rotate(360deg);
  }
}
